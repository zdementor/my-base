//----------------------------------------------------------------------------
namespace core {
//----------------------------------------------------------------------------

class aabbox3df
{
    aabbox3df();
	aabbox3df(const vector3df& init);
    aabbox3df(const vector3df& min, const vector3df& max);
    aabbox3df(float minx, float miny, float minz, float maxx, float maxy, float maxz);
	aabbox3df(const aabbox3df &box);
	~aabbox3df();

    //------------------------------------------------------------------------
    // operators
    //------------------------------------------------------------------------

    bool operator==(const aabbox3df& other) const;

    //------------------------------------------------------------------------
    // functions
    //------------------------------------------------------------------------

    //! Adds a point to the bounding box, causing it to grow bigger, 
    //! if point is outside of the box
    //! \param p: Point to add into the box.
    void addInternalPoint(const vector3df& p);

    //! Adds an other bounding box to the bounding box, causing it to grow bigger,
    //! if the box is outside of the box
    //! \param b: Other bounding box to add into this box.
    void addInternalBox(const aabbox3df& b);

    //! Resets the bounding box.
    void reset(float x, float y, float z);

    //! Resets the bounding box.
    void reset(const aabbox3df& initValue);

    //! Resets the bounding box.
    void reset(const vector3df& initValue);

    //! returns center of the bounding box
    vector3df getCenter() const;

    //! returns extend of the box
    vector3df getExtend() const;

    //! returns if the box is empty, which means that there is
    //! no space within the min and the max edge.
    bool isEmpty() const;

    //! repairs the box, if for example MinEdge and MaxEdge are swapped.
    void repair();

    bool isValide() const;

	void set(const core::aabbox3df &b);

	//------------------------------------------------------------------------
    // member variables    
	//------------------------------------------------------------------------

    vector3df MinEdge;
    vector3df MaxEdge;
};

//----------------------------------------------------------------------------
} // end namespace core 
//----------------------------------------------------------------------------
