//----------------------------------------------------------------------------
namespace io {
//---------------------------------------------------------------------------

class IFileList : public IUnknown
{
    //! Returns the amount of files in the filelist.
    //! \return
    //! Returns the amount of files and directories in the file list.
    int getFileCount() const;

	//! Gets the externsion of a file in the list, based on an index.
    const char* getFileExt(int index) const;

    //! Gets the name of a file in the list, based on an index.
    //! The path is not included in this name. Use getFullFileName for this.
    //! \param index is the zero based index of the file which name should
    //!   be returned. The index has to be smaller than the amount getFileCount() returns.
    //! \return
    //! Returns the file name of the file. Returns 0, if an error occured.
    const char* getFileName(int index) const;

    //! Gets the full name of a file in the list, path included, based on an index.
    //! \param index is the zero based index of the file which name should
    //!   be returned. The index has to be smaller than the amount getFileCount() returns.
    //! \return
    //! Returns the file name of the file. Returns 0, if an error occured.
    const char* getFullFileName(int index) const;

    //! Returns of the file is a directory
    //! \param
    //! index is the zero based index of the file which name should
    //!   be returned. The index has to be smaller than the amount getFileCount() returns.
    //! \return
    //! Returns true, if the file is a directory, and false, if it is not.
    //!  If an error occurs, the result is undefined.
    bool isDirectory(int index) const;

	//! return file size in bytes
	int getFileSizeInBytes(int index) const;

	//! return current active path
	const char* getWorkingDirectory() const;

	//! return true id file list need to be updates
	bool isNeedToUpdate() const;

	//! update directories list for current working directory
	void update() const;
};

//----------------------------------------------------------------------------
} // end namespace io
//----------------------------------------------------------------------------
